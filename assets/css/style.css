/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -khtml-user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  display: block;
  overflow: hidden;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  top: 0;
  left: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.slick-track:before,
.slick-track:after {
  display: table;
  content: '';
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  display: none;
  float: left;
  height: 100%;
  min-height: 1px;
}

[dir='rtl'] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

.header {
  position: relative;
  height: 100vh;
}

.header__slider-item {
  height: 100vh;
  background-image: url(../img/bgc_header.jpg);
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.slider-item__info {
  position: absolute;
  right: 80px;
  bottom: 116px;
  text-align: right;
  color: #fff;
}

.slider-item__info-suptitle {
  margin-bottom: 5px;
}

.slider-item__info-suptext {
  margin-bottom: 8px;
}

.slider-item__info-title {
  font-size: 80px;
  line-height: 86px;
  font-weight: 800;
  text-transform: uppercase;
  margin-bottom: 40px;
}

.slider-item__info-text {
  font-size: 40px;
  line-height: 46px;
  font-weight: 800;
  margin-bottom: 20px;
}

.header__aside {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 5;
  border-right: 1px solid rgba(255, 255, 255, 0.25);
  height: 100vh;
  text-align: center;
  color: #fff;
}

.header__title {
  font-size: 200px;
  line-height: 156px;
  text-transform: uppercase;
  color: #fff;
  opacity: 0.07;
  font-weight: 800;
  max-width: 467px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 4;
}

.menu a {
  color: #fff;
}

.menu a span {
  display: block;
  font-size: 12px;
  line-height: 14px;
  letter-spacing: 3px;
  font-weight: 500;
  padding-top: 6px;
  margin-bottom: 37px;
  text-transform: capitalize;
}

.header__date {
  font-weight: 800;
  font-size: 72px;
  line-height: 64px;
}

.header__date span {
  padding-top: 15px;
  font-weight: 300;
  font-size: 16px;
  line-height: 19px;
  letter-spacing: 1.4px;
  margin-bottom: 30px;
  display: block;
}

.header__search {
  padding-top: 15px;
  padding-bottom: 35px;
}

.header__location {
  display: inline-block;
  font-size: 12px;
  letter-spacing: 1.05px;
  font-weight: 300;
  position: relative;
  padding-left: 19px;
  text-transform: capitalize;
}

.header__location ::before {
  content: "";
  position: absolute;
  width: 11px;
  height: 13px;
  background-image: url(../img/Path.png);
}

.header__map {
  position: absolute;
  right: 0;
  top: 0;
  z-index: 3;
}

.header__arrows {
  position: absolute;
  left: 210px;
  bottom: 40px;
  z-index: 3;
}

.line-animation {
  stroke-dashoffset: 600;
  -webkit-animation: animdash 3s infinite 6s;
          animation: animdash 3s infinite 6s;
}

@-webkit-keyframes animdash {
  to {
    stroke-dasharray: 600;
  }
}

@keyframes animdash {
  to {
    stroke-dasharray: 600;
  }
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  font-family: 'Fira Sans', sans-serif;
  font-weight: 400;
  font-size: 16px;
  background-color: #171919;
  color: #fff;
  text-transform: uppercase;
}

a {
  display: inline-block;
  text-decoration: none;
  color: #fff;
}

ul,
li {
  list-style: none;
  margin: 0;
  padding: 0;
}

.container {
  max-width: 1920px;
  shape-margin: 0 auto;
}

.headline-left {
  font-style: normal;
  font-weight: normal;
  font-size: 22px;
  line-height: 32px;
  letter-spacing: 7.33333px;
  text-transform: uppercase;
  color: #FFFFFF;
  mix-blend-mode: normal;
  opacity: 0.5;
  padding-left: 103px;
  position: relative;
  display: inline-block;
}

.headline-left::before {
  content: "";
  position: absolute;
  width: 80px;
  height: 1px;
  background-color: #fff;
  left: 0;
  top: 50%;
}

.slider-arrows {
  position: absolute;
  top: 40px;
  right: 80px;
  cursor: pointer;
  z-index: 4;
}

.slider-arrows__left {
  right: 125px;
}

.slider-dotshead {
  position: absolute;
  right: 50px;
  bottom: 36px;
  max-width: 920px;
  width: 100%;
  color: #fff;
}

.slider-dotshead .slick-current .dots-box {
  border-top: 4px solid #4af6cd;
}

.dots-box {
  width: 200px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  height: 28px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-top: 4px solid #fff;
  padding-top: 6px;
}

.dots-box__number {
  font-weight: 800;
  font-size: 24px;
  line-height: 34px;
}

.dots-box__name {
  font-weight: 300;
  line-height: 19px;
}

.title span {
  color: rgba(255, 255, 255, 0.02);
  font-weight: 800;
  line-height: 156px;
  position: relative;
  -webkit-transform: translateX(-50px);
      -ms-transform: translateX(-50px);
          transform: translateX(-50px);
  display: inline-block;
  font-size: 200px;
}

.title h3 {
  margin: 0;
  color: #fff;
  font-size: 80px;
  position: absolute;
  top: 0;
  right: -5px;
}

.title h3::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: 80px;
  height: 1px;
  background-color: #4af6cd;
}

.subtitle {
  display: inline-block;
  text-align: right;
}

.subtitle__head {
  font-weight: 800;
  font-size: 40px;
  padding-right: 10px;
}

.subtitle__head span {
  font-weight: 300;
}

.surf {
  padding: 160px 0 120px;
  background-image: url(../img/POI.png);
  background-position: right 200px;
  background-repeat: no-repeat;
  background-size: auto;
}

.surf__subtitle {
  text-align: right;
  padding-right: 80px;
  margin-top: -86px;
}

.surf-slider {
  padding-top: 110px;
}

.surf-slider .slider-arrows {
  top: 50px;
  opacity: 0.25;
}

.surf-slider .slick-slide:nth-child(4n + 1) .surf-box {
  margin-top: 32px;
}

.surf-slider .slick-slide:nth-child(4n + 3) .surf-box {
  margin-top: 89px;
}

.surf-slider .slick-current .surf-box__inner-btn {
  display: block;
}

.surf-slider .slick-current .surf-box__inner {
  background: rgba(28, 33, 33, 0.3);
}

.surf-box {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.surf-box__inner {
  min-height: 750px;
  background: rgba(28, 33, 33, 0.85);
  position: relative;
  top: 0;
  bottom: 0;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.surf-box__inner:hover {
  background: rgba(28, 33, 33, 0.3);
}

.surf-box__inner:hover .surf-box__inner-btn {
  display: block;
}

.surf-box__inner-title {
  font-weight: 800;
  font-size: 40px;
  line-height: 36px;
  padding: 72px 0 40px;
  width: 140px;
}

.surf-box__inner-location {
  font-size: 18px;
  line-height: 22px;
  letter-spacing: 8px;
  -webkit-transform: rotate(-90deg);
      -ms-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: 40px;
  bottom: 80px;
  white-space: nowrap;
  width: 0;
  height: 0;
}

.surf-box__inner-location span {
  font-weight: 100;
}

.surf-box__inner-btn {
  bottom: 0;
  position: absolute;
  text-align: center;
  left: 0;
  right: 0;
  display: none;
}

.btn {
  font-size: 40px;
  line-height: 36px;
  font-weight: 800;
}

.btn span {
  padding: 17px 57px 15px 17px;
  background-color: #4af6cd;
  display: inline-block;
  margin-left: 19px;
  position: relative;
}

.btn span::before {
  content: "";
  position: absolute;
  width: 20px;
  height: 1px;
  background-color: #fff;
  top: 50%;
  left: -10px;
}

.btn span::after {
  content: "";
  position: absolute;
  width: 25px;
  height: 21px;
  background-image: url(../img/arrows-right.svg);
  top: 50%;
  right: 17px;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
}

.slider-map {
  background-image: url(../img/world_map_dots.png);
  min-height: 635px;
  max-width: 1200px;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  margin: 0 auto;
}

.slider-map .slick-list {
  min-height: 635px;
}

.slider-map .slick-current .slider-dots__content {
  display: block;
  width: 285px;
  padding: 28px 31px 0px 32px;
}

.slider-dots__content-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-bottom: 30px;
}

.slider-dots__content-item {
  text-align: center;
}

.slider-dots__content-item img {
  margin-bottom: 7px;
}

.slider-dots__content-number {
  font-weight: 800;
  font-size: 16px;
  line-height: 23px;
}

.slider-dots__content-name {
  font-weight: 300;
  font-size: 10px;
  line-height: 12px;
}

.slider-dots__content-title {
  font-weight: 800;
  font-size: 18px;
  line-height: 26px;
  padding-bottom: 8px;
  margin-bottom: 8px;
  position: relative;
}

.slider-dots__content-title::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  background-color: #4af6cd;
  width: 80px;
  height: 1px;
}

.slider-dots__content-subtitle {
  text-transform: capitalize;
  line-height: 19px;
  font-size: 16px;
}

.slider-dots__content-link {
  padding-top: 4px;
}

.slider-dots__circle {
  width: 23px;
  height: 23px;
  background-color: #4af6cd;
  border-radius: 50%;
}

.slider-dots__content {
  display: none;
  background: rgba(15, 16, 16, 0.7);
  border-radius: 6px;
  position: absolute;
  bottom: 35px;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
}

.slider-dots__content::before {
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 20px solid #4af6cd;
  border-left: 12px solid transparent;
  border-right: 12px solid transparent;
  bottom: -21px;
  left: 50%;
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
}

.slider-dots {
  position: relative;
}

.slider-dots--1 {
  top: 335px;
  left: 0;
}

.slider-dots--1 .slider-dots__content {
  -webkit-transform: translateX(0%);
      -ms-transform: translateX(0%);
          transform: translateX(0%);
}

.slider-dots--1 .slider-dots__content::before {
  left: 0;
}

.slider-dots--2 {
  top: 270px;
  left: 0;
}

.slider-dots--2 .slider-dots__circle {
  position: relative;
}

.slider-dots--2 .slider-dots__circle::before {
  position: absolute;
  content: "";
  background-image: url(../img/Shape.png);
  width: 14px;
  height: 17px;
  background-size: cover;
  right: -25px;
  top: -25px;
}

.slider-dots--3 {
  top: 330px;
  left: 25px;
}

.slider-dots--4 {
  top: 470px;
  left: -25px;
}

.slider-dots--5 {
  top: 230px;
  left: -65px;
}

.slider-dots--6 {
  top: 550px;
  left: -120px;
}

.slider-dots--7 {
  top: 375px;
  left: -95px;
}

.slider-dots--8 {
  top: 600px;
  left: 35px;
}

.slider-dots--8 .slider-dots__content {
  -webkit-transform: translateX(-262px);
      -ms-transform: translateX(-262px);
          transform: translateX(-262px);
}

.slider-dots--8 .slider-dots__content::before {
  left: auto;
  right: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
